import{l as F,j as b,U as f}from"./main.js";import{F as m}from"./main-499a499e.js";import{T as j}from"./TextField-c8735bb7.js";import"./index.esm-d52ea482.js";import"./identifier-91e83c3b.js";import"./iconBase-acf0401f.js";import"./Box-0ce68545.js";import"./Paper-1943bcb2.js";import"./FormControl-e1c831f9.js";import"./utils-a4c617b5.js";import"./Select-07b752e9.js";import"./useFormControl-74340145.js";import"./Input-29494a31.js";import"./createSvgIcon-92c7fe83.js";import"./FormHelperText-ab957a1c.js";const C=({columnName:t,columnValue:x,columnMetaData:e,storeColumn:g,columnValidation:r,onColumnChange:E,metaData:h,storeForm:i,formMode:p})=>{F.debug(t,x,e,g,r,h,i,p);const T={maxLength:e.character_maximum_length,className:g.classNames,readOnly:p===m.VIEW||p===m.UPDATE&&h.primary_key.includes(t)},_=r!=null&&r.error?r==null?void 0:r.text:"Enter multi line text ("+e.character_maximum_length+")",v=()=>f.OUTLINED;return b.jsx(j,{error:r==null?void 0:r.error,id:t,label:e.formLabel,value:x??"",required:e.is_nullable==="NO",multiline:!0,minRows:3,maxRows:10,inputProps:T,helperText:_,variant:v(),onChange:s=>{E(t,s.target.value)},onInvalid:s=>{s.preventDefault()}})};export{C as default};
